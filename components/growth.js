
export let stateRef, wiz;
export function init(state, W){ stateRef = state; wiz = W; document.getElementById('addGrowth').addEventListener('click', openAddGrowthModal); document.getElementById('btnGenerateGoalModal').addEventListener('click', openGoalModal); renderAll(); }
function openAddGrowthModal(){ const form=document.createElement('form'); form.innerHTML=`<label>Tytu≈Ç (cel)<br><input name="title" required></label><br><label>Notatka / link<br><input name="note"></label><br><div style="display:flex;gap:8px;margin-top:8px"><button class="btn" type="submit">Zapisz üíæ</button><button type="button" id="cancel" class="btn">Anuluj</button></div>`; form.addEventListener('submit',(e)=>{ e.preventDefault(); const fd=new FormData(form); stateRef.growth.push({ id: Date.now().toString(), title: fd.get('title'), note: fd.get('note'), done:false }); wiz.registerChange(); renderAll(); document.getElementById('modal').classList.add('hidden'); }); form.querySelector('#cancel').addEventListener('click', ()=> document.getElementById('modal').classList.add('hidden')); const openModal = document.querySelector('body').__openModal || window.openModal; if (openModal) openModal('Dodaj cel rozwojowy', form); }
function openGoalModal(){ const form=document.createElement('form'); form.innerHTML=`<label>Wpisz cel (np. Zwiƒôkszyƒá sprzeda≈º w sklepie o 20%)<br><input name="goal" required></label><br><label>Kategoria (opcjonalnie)<br><input name="category"></label><br><div style="display:flex;gap:8px;margin-top:8px"><button class="btn" type="submit">Generuj plan ‚ú®</button><button type="button" id="cancel" class="btn">Anuluj</button></div>`; form.addEventListener('submit',(e)=>{ e.preventDefault(); const fd=new FormData(form); const goal = fd.get('goal'); const category = fd.get('category'); const steps = generatePlan(goal, category); const div=document.createElement('div'); steps.forEach((s,idx)=>{ const row=document.createElement('div'); row.style.display='flex'; row.style.justifyContent='space-between'; row.style.marginBottom='6px'; row.innerHTML = `<div>${idx+1}. ${escapeHtml(s)}</div><button class="btn">Dodaj jako zadanie</button>`; row.querySelector('button').addEventListener('click', ()=>{ stateRef.tasks.push({ id: Date.now().toString(), title: s, due:null, q:2, priority:2, note:'' }); wiz.registerChange(); }); div.appendChild(row); }); const close=document.createElement('button'); close.className='btn'; close.textContent='Zamknij'; close.addEventListener('click', ()=> document.getElementById('modal').classList.add('hidden')); div.appendChild(close); document.getElementById('modalBody').innerHTML=''; document.getElementById('modalBody').appendChild(div); }); form.querySelector('#cancel').addEventListener('click', ()=> document.getElementById('modal').classList.add('hidden')); const openModal = document.querySelector('body').__openModal || window.openModal; if (openModal) openModal('Zamie≈Ñ cel w plan', form); }
function generatePlan(goal, category){ const steps=[]; steps.push('Zdefiniuj konkretny miernik sukcesu (np. +20% sprzeda≈ºy w 3 miesiƒÖce).'); steps.push('Przeanalizuj aktualne dane sprzeda≈ºy i wybierz top 3 produkty do promocji.'); steps.push('Zbierz feedback klient√≥w (kr√≥tka ankieta) i popraw opisy produkt√≥w.'); steps.push('Stw√≥rz jedno dzia≈Çanie marketingowe (newsletter lub social) z promocjƒÖ.'); steps.push('Zaprogramuj test i mierz wyniki przez 2 tygodnie; iteruj.'); return steps; }
function escapeHtml(s){ return String(s).replace(/[&<>"]/g, c=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;'}[c])); }
export function renderAll(){ const container=document.getElementById('growthList'); container.innerHTML=''; if(stateRef.growth.length===0){ const hints=[{title:'Kurs UX podstawy ‚Äî sentobeauty.pl', note:'sprawd≈∫ ofertƒô'},{title:'Szkolenie AI ‚Äî wprowadzenie', note:'materia≈Çy online'}]; hints.forEach(h=>{ const el=document.createElement('div'); el.className='growth-item'; el.innerHTML=`<div>${escapeHtml(h.title)}</div><div><small>${escapeHtml(h.note)}</small></div>`; container.appendChild(el); }); } else { stateRef.growth.slice().reverse().forEach(g=>{ const el=document.createElement('div'); el.className='growth-item'; el.innerHTML=`<div>${escapeHtml(g.title)}</div><div><button class="btn small">${g.done ? '‚úî' : '‚òê'}</button></div>`; el.querySelector('button').addEventListener('click', ()=>{ g.done=!g.done; wiz.registerChange(); renderAll(); }); container.appendChild(el); }); } }
